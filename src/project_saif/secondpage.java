/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_saif;

import static java.lang.Double.valueOf;

/**
 *
 * @author saifn
 */
public class secondpage extends javax.swing.JFrame {
  
    double fnum;
    double snum;
    double result;
    String opt="";
    int eq=0;
    int flag=0;
    boolean deg;
    boolean rad;
    double ops;
    double m;
    double inb;
    double out;
    
    public secondpage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        ac = new javax.swing.JButton();
        del = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        four = new javax.swing.JButton();
        div = new javax.swing.JButton();
        mul = new javax.swing.JButton();
        six = new javax.swing.JButton();
        five = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        one = new javax.swing.JButton();
        min = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        three = new javax.swing.JButton();
        two = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        equal = new javax.swing.JButton();
        ans = new javax.swing.JButton();
        display = new javax.swing.JTextField();
        normal = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        divbyx = new javax.swing.JButton();
        cube = new javax.swing.JButton();
        mread = new javax.swing.JButton();
        mclear = new javax.swing.JButton();
        msave = new javax.swing.JButton();
        root = new javax.swing.JButton();
        sinh = new javax.swing.JButton();
        cosh = new javax.swing.JButton();
        tanh = new javax.swing.JButton();
        square = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        log = new javax.swing.JButton();
        pai = new javax.swing.JButton();
        lnx = new javax.swing.JButton();
        plusormin = new javax.swing.JButton();
        degree = new javax.swing.JRadioButton();
        radian = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        mdisplay = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cuberoot = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        ac.setText("AC");
        ac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acActionPerformed(evt);
            }
        });

        del.setText("DEL");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        div.setText("÷");
        div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divActionPerformed(evt);
            }
        });

        mul.setText("×");
        mul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulActionPerformed(evt);
            }
        });

        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        jButton11.setText("×10x");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        dot.setText(".");
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        min.setText("-");
        min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minActionPerformed(evt);
            }
        });

        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        equal.setText("=");
        equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalActionPerformed(evt);
            }
        });

        ans.setText("Ans");

        display.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        normal.setText("Electronic");
        normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalActionPerformed(evt);
            }
        });

        sin.setText("Sin");
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        cos.setText("Cos");
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        tan.setText("Tan");
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        percent.setText("%");

        divbyx.setText("1/X");
        divbyx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divbyxActionPerformed(evt);
            }
        });

        cube.setText(" X^3");
        cube.setToolTipText("");
        cube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cubeActionPerformed(evt);
            }
        });

        mread.setText("MR");
        mread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mreadActionPerformed(evt);
            }
        });

        mclear.setText("MC");
        mclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mclearActionPerformed(evt);
            }
        });

        msave.setText("MS");
        msave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msaveActionPerformed(evt);
            }
        });

        root.setText("√X");
        root.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootActionPerformed(evt);
            }
        });

        sinh.setText("Sinh");
        sinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinhActionPerformed(evt);
            }
        });

        cosh.setText("Cosh");
        cosh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coshActionPerformed(evt);
            }
        });

        tanh.setText("Tanh");
        tanh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanhActionPerformed(evt);
            }
        });

        square.setText(" X^2");
        square.setToolTipText("");
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });

        jButton13.setText(" X^y");
        jButton13.setToolTipText("");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        log.setText("Log");
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        pai.setText("π");
        pai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paiActionPerformed(evt);
            }
        });

        lnx.setText("ln X");
        lnx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnxActionPerformed(evt);
            }
        });

        plusormin.setText("+/-");
        plusormin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusorminActionPerformed(evt);
            }
        });

        degree.setText("Degrees");
        degree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degreeActionPerformed(evt);
            }
        });

        radian.setText("Radians");
        radian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radianActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("HP Simplified", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("Scientific Calculator");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setText("Memory Display");

        cuberoot.setText("∛X");
        cuberoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuberootActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(sinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cosh)
                                        .addComponent(tanh))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(log)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(plusormin, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton11)
                                    .addComponent(square, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mclear)
                                            .addComponent(msave, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(root)
                                            .addComponent(cuberoot)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(div, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(min, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(equal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lnx)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(cube)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mread)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(divbyx))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(mul, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(del)
                                    .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ans))
                                .addGap(18, 18, 18)
                                .addComponent(ac)
                                .addGap(6, 6, 6))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(one)
                        .addGap(18, 18, 18)
                        .addComponent(two)
                        .addGap(18, 18, 18)
                        .addComponent(three))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(four)
                        .addGap(18, 18, 18)
                        .addComponent(five)
                        .addGap(18, 18, 18)
                        .addComponent(six))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(zero)
                        .addGap(18, 18, 18)
                        .addComponent(dot)
                        .addGap(18, 18, 18)
                        .addComponent(pai))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(seven)
                        .addGap(18, 18, 18)
                        .addComponent(eight)
                        .addGap(18, 18, 18)
                        .addComponent(nine))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(radian)
                                    .addGap(47, 47, 47))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(degree)
                                    .addGap(45, 45, 45)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(mdisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(normal)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(normal)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(degree))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radian)
                    .addComponent(mdisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(mclear)
                                .addComponent(cuberoot))
                            .addComponent(cos)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sinh)
                            .addComponent(jButton13)
                            .addComponent(mread)
                            .addComponent(divbyx))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cosh)
                            .addComponent(cube))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tanh)
                            .addComponent(msave)
                            .addComponent(tan)
                            .addComponent(root)
                            .addComponent(square))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(log)
                        .addComponent(plusormin))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lnx)
                        .addComponent(jButton11)
                        .addComponent(percent)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seven)
                            .addComponent(eight)
                            .addComponent(nine))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(four)
                            .addComponent(five)
                            .addComponent(six))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(one)
                            .addComponent(two)
                            .addComponent(three))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zero)
                            .addComponent(dot)
                            .addComponent(pai)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ac)
                            .addComponent(del))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(div)
                            .addComponent(mul))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(min)
                            .addComponent(plus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(equal)
                            .addComponent(ans))))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulActionPerformed
        // TODO add your handling code here:
        //fnum = Double.parseDouble(display.getText());
        //opt = "*";
        if(opt==""){
            fnum = Double.parseDouble(display.getText());
           // display.setText("");
        }
        else
        {
            String answer;
            
            snum = Double.parseDouble(display.getText());
            if(opt == "+")
            {
                result = fnum + snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "-")
            {
                result = fnum - snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "*")
            {
                result = fnum * snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "/")
            {
                result = fnum / snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }
        }
        //display.setText("");
        flag=1;
        opt = "*";
    }//GEN-LAST:event_mulActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalActionPerformed
        // TODO add your handling code here:
        String answer;
        snum = Double.parseDouble(display.getText());
        if(opt == "+")
        {
            result = fnum + snum;
            answer = String.format("%.0f", result);
            display.setText(answer);
        }
            
            else if(opt == "-")
        {
            result = fnum - snum;
            answer = String.format("%.0f", result);
            display.setText(answer);
        }
            
            else if(opt == "*")
        {
            result = fnum * snum;
            answer = String.format("%.0f", result);
            display.setText(answer);
        }
            
            else if(opt == "/")
        {
            result = fnum / snum;
            answer = String.format("%.0f", result);
            display.setText(answer);
        }
        opt="";
        eq=1;
    }//GEN-LAST:event_equalActionPerformed

    private void minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minActionPerformed
        // TODO add your handling code here:
        //fnum = Double.parseDouble(display.getText());
        //opt = "-";
        if(opt==""){
            //opt = "-";
            fnum = Double.parseDouble(display.getText());
           // display.setText("");
        }
        else
        {
            String answer;
            
            snum = Double.parseDouble(display.getText());
            if(opt == "+")
            {
                result = fnum + snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "-")
            {
                result = fnum - snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "*")
            {
                result = fnum * snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "/")
            {
                result = fnum / snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }
        }
        //display.setText("");
        flag=1;
        opt = "-";
    }//GEN-LAST:event_minActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + seven.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_sevenActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + nine.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_nineActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + one.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_oneActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + eight.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_eightActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + four.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + five.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + six.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_sixActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + two.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        if(flag==1){
            display.setText("");
            flag=0;
        }
        if(eq==1){
            display.setText("");
            eq=0;
        }
        String enternum = display.getText() + three.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_threeActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        String enternum = display.getText() + zero.getText();
        display.setText(enternum);
        
    }//GEN-LAST:event_zeroActionPerformed

    private void divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divActionPerformed
        // TODO add your handling code here:
        //fnum = Double.parseDouble(display.getText());
        //opt = "/";
        if(opt==""){
            fnum = Double.parseDouble(display.getText());
           // display.setText("");
        }
        else
        {
            String answer;
            
            snum = Double.parseDouble(display.getText());
            if(opt == "+")
            {
                result = fnum + snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "-")
            {
                result = fnum - snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "*")
            {
                result = fnum * snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "/")
            {
                result = fnum / snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }
        }
        //display.setText("");
        flag=1;
        opt = "/";
    }//GEN-LAST:event_divActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        // TODO add your handling code here:
        if(opt==""){
            fnum = Double.parseDouble(display.getText());
           // display.setText("");
        }
        else
        {
            String answer;
            
            snum = Double.parseDouble(display.getText());
            if(opt == "+")
            {
                result = fnum + snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "-")
            {
                result = fnum - snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "*")
            {
                result = fnum * snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }

                else if(opt == "/")
            {
                result = fnum / snum;
                answer = String.format("%.0f", result);
                fnum=result;
                display.setText(answer);
            }
        }
        //display.setText("");
        flag=1;
        opt = "+";
    }//GEN-LAST:event_plusActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
        // TODO add your handling code here:
        String enternum = display.getText() + dot.getText();
        display.setText(enternum);
    }//GEN-LAST:event_dotActionPerformed

    private void acActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acActionPerformed
        // TODO add your handling code here:
        result = result*0;
        display.setText("");
         ops = 0;
         inb = 0;
         out = 0;
         fnum = 0;
         snum = 0;
    }//GEN-LAST:event_acActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        // TODO add your handling code here:
        int length = display.getText().length();
        int number = display.getText().length() - 1 ;
        String store;
        
        if (length > 0)
        {
            StringBuilder back = new StringBuilder(display.getText());
            back.deleteCharAt(number);
            store = back.toString();
            display.setText(store);
        }
    }//GEN-LAST:event_delActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                if(rad){
                result = Math.cos(ops);    
                if(result > -100000000 && result < 100000000)
        {
            display.setText(String.valueOf(result));
        }
        else
        {
            display.setText("Error");
        }
                
            }
            else{
                ops = (3.141592654*ops)/180;
                result = Math.cos(ops);    
                display.setText(String.valueOf(result));
            }
    }//GEN-LAST:event_cosActionPerformed

    private void normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalActionPerformed
        // TODO add your handling code here:
        new firstpage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_normalActionPerformed

    private void mclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mclearActionPerformed
        // TODO add your handling code here:
        mdisplay.setText("");
        //m = 0;
    }//GEN-LAST:event_mclearActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
            if(rad){
                result = Math.sin(ops);    
                display.setText(String.valueOf(result));
            }
            else{
                ops = (3.141592654*ops)/180;
                result = Math.sin(ops);    
                display.setText(String.valueOf(result));
            }
            
    }//GEN-LAST:event_sinActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = (3.141592654*ops)/180;
                result = Math.tan(ops);
                display.setText(String.valueOf(result));
    }//GEN-LAST:event_tanActionPerformed

    private void plusorminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusorminActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
        ops = ops * (-1);
        display.setText(String.valueOf(ops));
    }//GEN-LAST:event_plusorminActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.log(ops);
                display.setText(String.valueOf(ops/2.302585092994046));
    }//GEN-LAST:event_logActionPerformed

    private void sinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinhActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.sinh(ops);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_sinhActionPerformed

    private void coshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coshActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.cosh(ops);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_coshActionPerformed

    private void tanhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanhActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.tanh(ops);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_tanhActionPerformed

    private void degreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degreeActionPerformed
        // TODO add your handling code here:
        deg = true;
        rad = false;
        radian.setSelected(false);
    }//GEN-LAST:event_degreeActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.pow(ops,ops);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_jButton13ActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.pow(ops,2);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_squareActionPerformed

    private void cubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cubeActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.pow(ops,3);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_cubeActionPerformed

    private void lnxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnxActionPerformed
        // TODO add your handling code here:
        double ops = Double.parseDouble(String.valueOf(display.getText()));
                ops = Math.log(ops);
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_lnxActionPerformed

    private void paiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paiActionPerformed
        // TODO add your handling code here:
        display.setText(String.valueOf(Math.PI));
        /*if(deg)
        {
            display.setText("180");
            
        }
        else //if(deg)
        {
            //ops = 22/7;
            display.setText("3.14159265358979323846264338327950");
            
        }*/
    }//GEN-LAST:event_paiActionPerformed

    private void radianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radianActionPerformed
        // TODO add your handling code here:
        rad = true;
        deg = false;
        degree.setSelected(false);
    }//GEN-LAST:event_radianActionPerformed

    private void rootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootActionPerformed
        // TODO add your handling code here:
        ops = Double.parseDouble(String.valueOf(display.getText()));
        ops = Math.sqrt(ops);    
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_rootActionPerformed

    private void mreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mreadActionPerformed
        // TODO add your handling code here:
        display.setText(String.valueOf(mdisplay.getText()));
    }//GEN-LAST:event_mreadActionPerformed

    private void msaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msaveActionPerformed
        // TODO add your handling code here:
        //double m = Double.parseDouble(String.valueOf(display.getText()));
        mdisplay.setText(String.valueOf(display.getText()));
        //display.setText(String.valueOf(m));
    }//GEN-LAST:event_msaveActionPerformed

    private void divbyxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divbyxActionPerformed
        // TODO add your handling code here:
        inb = Double.parseDouble(String.valueOf(display.getText()));
        out = 1/inb;
        
        if(out > -100000000 && out < 100000000)
        {
            display.setText(String.valueOf(out));
        }
        else
        {
            display.setText("Error");
        }
        out = 0;
    }//GEN-LAST:event_divbyxActionPerformed

    private void cuberootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuberootActionPerformed
        // TODO add your handling code here:
        ops = Double.parseDouble(String.valueOf(display.getText()));
        ops = Math.cbrt(ops);    
                display.setText(String.valueOf(ops));
    }//GEN-LAST:event_cuberootActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(secondpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(secondpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(secondpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(secondpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new secondpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ac;
    private javax.swing.JButton ans;
    private javax.swing.JButton cos;
    private javax.swing.JButton cosh;
    private javax.swing.JButton cube;
    private javax.swing.JButton cuberoot;
    private javax.swing.JRadioButton degree;
    private javax.swing.JButton del;
    private javax.swing.JTextField display;
    private javax.swing.JButton div;
    private javax.swing.JButton divbyx;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JButton equal;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton lnx;
    private javax.swing.JButton log;
    private javax.swing.JButton mclear;
    private javax.swing.JTextField mdisplay;
    private javax.swing.JButton min;
    private javax.swing.JButton mread;
    private javax.swing.JButton msave;
    private javax.swing.JButton mul;
    private javax.swing.JButton nine;
    private javax.swing.JButton normal;
    private javax.swing.JButton one;
    private javax.swing.JButton pai;
    private javax.swing.JButton percent;
    private javax.swing.JButton plus;
    private javax.swing.JButton plusormin;
    private javax.swing.JRadioButton radian;
    private javax.swing.JButton root;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton sinh;
    private javax.swing.JButton six;
    private javax.swing.JButton square;
    private javax.swing.JButton tan;
    private javax.swing.JButton tanh;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
